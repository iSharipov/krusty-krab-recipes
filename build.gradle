plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.4'
    id 'org.openapi.generator' version '6.4.0'
}

apply plugin: 'io.spring.dependency-management'

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    mapstructVersion = "1.5.3.Final"
    lombokVersion = "1.18.26"
    jpaModelgenVersion = "6.1.7.Final"
    lombokMapstructBinding = "0.2.0"
    hibernateValidatorVersion = "8.0.0.Final"
    hipersistenceVersion = "3.2.0"
    springdocOpenapiVersion = "2.0.2"
    junitVersion = "5.8.1"
    jacksonDatabindNullableVersion = "0.2.6"
    mysqlConnectorVersion = "8.0.31"
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")

    implementation("org.hibernate:hibernate-validator:$hibernateValidatorVersion")
    compileOnly("org.mapstruct:mapstruct:$mapstructVersion")
    compileOnly("org.projectlombok:lombok:$lombokVersion")
    annotationProcessor("org.mapstruct:mapstruct-processor:$mapstructVersion")
    annotationProcessor("org.projectlombok:lombok:$lombokVersion")
    annotationProcessor("org.projectlombok:lombok-mapstruct-binding:$lombokMapstructBinding")
    annotationProcessor("org.hibernate.orm:hibernate-jpamodelgen:$jpaModelgenVersion")

    runtimeOnly("org.postgresql:postgresql")
    runtimeOnly("mysql:mysql-connector-java:$mysqlConnectorVersion")
    implementation("io.hypersistence:hypersistence-utils-hibernate-60:$hipersistenceVersion")
    implementation("org.liquibase:liquibase-core");

    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:$springdocOpenapiVersion")
    implementation("org.openapitools:jackson-databind-nullable:$jacksonDatabindNullableVersion")

    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
    testRuntimeOnly("com.h2database:h2")
}

var spec = "$rootDir/api/openapi.yml"
var generatedSourcesDir = "$buildDir/generated/openapi"

compileJava.dependsOn "openApiGenerate"

openApiGenerate {
    generatorName.set("spring")

    inputSpec.set(spec)
    outputDir.set(generatedSourcesDir)

    apiPackage.set("com.krustykrabrecipes.api.rest")
    modelPackage.set("com.krustykrabrecipes.api.model")
    configOptions = [
            dateLibrary   : "java8",
            useSpringBoot3: "true",
            java8         : "false",
            interfaceOnly : "true"
    ]
}

sourceSets {
    getByName("main") {
        java {
            srcDir("$generatedSourcesDir/src/main/java")
        }
    }
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.compilerArgs = [
            '-Amapstruct.suppressGeneratorTimestamp=true',
            '-Amapstruct.defaultComponentModel=spring'
    ]
}